{"version":3,"file":"DeletedTasksPage-d7205eee.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/rotate-ccw.js","../../../src/pages/DeletedTasksPage.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst RotateCcw = createLucideIcon(\"RotateCcw\", [\n  [\"path\", { d: \"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\", key: \"1357e3\" }],\n  [\"path\", { d: \"M3 3v5h5\", key: \"1xhq8a\" }]\n]);\n\nexport { RotateCcw as default };\n//# sourceMappingURL=rotate-ccw.js.map\n","import React, { useState, useEffect } from 'react';\nimport { useAppContext } from '../context/AppContextSupabase';\nimport { DeletedTask, getDeletedTasks, restoreDeletedTask, permanentlyDeleteTask, clearAllDeletedTasks } from '../utils/localStorage';\nimport Card from '../components/common/Card';\nimport Button from '../components/common/Button';\nimport Modal from '../components/common/Modal';\nimport Empty from '../components/common/Empty';\nimport { formatDate } from '../utils/helpers';\nimport { \n  Trash2, \n  RotateCcw, \n  AlertTriangle, \n  Calendar,\n  Clock,\n  Folder,\n  Tag,\n  X\n} from 'lucide-react';\n\nconst DeletedTasksPage: React.FC = () => {\n  const { projects, categories, tasks, setTasks } = useAppContext();\n  const [deletedTasks, setDeletedTasks] = useState<DeletedTask[]>([]);\n  const [showClearAllModal, setShowClearAllModal] = useState(false);\n  const [selectedTask, setSelectedTask] = useState<DeletedTask | null>(null);\n  const [showDetailModal, setShowDetailModal] = useState(false);\n\n  // Load deleted tasks on mount\n  useEffect(() => {\n    loadDeletedTasks();\n  }, []);\n\n  const loadDeletedTasks = () => {\n    const deleted = getDeletedTasks();\n    // Sort by deletion date, newest first\n    const sorted = deleted.sort((a, b) => \n      new Date(b.deletedAt).getTime() - new Date(a.deletedAt).getTime()\n    );\n    setDeletedTasks(sorted);\n  };\n\n  const handleRestore = (taskId: string) => {\n    const restoredTask = restoreDeletedTask(taskId);\n    if (restoredTask) {\n      // Reload tasks in context\n      const updatedTasks = [...tasks, restoredTask];\n      setTasks(updatedTasks);\n      // Reload deleted tasks\n      loadDeletedTasks();\n    }\n  };\n\n  const handlePermanentDelete = (taskId: string) => {\n    permanentlyDeleteTask(taskId);\n    loadDeletedTasks();\n  };\n\n  const handleClearAll = () => {\n    clearAllDeletedTasks();\n    setDeletedTasks([]);\n    setShowClearAllModal(false);\n  };\n\n  const getDaysAgo = (dateString: string): string => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffTime = Math.abs(now.getTime() - date.getTime());\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n    \n    if (diffDays === 0) {\n      const diffHours = Math.floor(diffTime / (1000 * 60 * 60));\n      if (diffHours === 0) {\n        const diffMinutes = Math.floor(diffTime / (1000 * 60));\n        return `${diffMinutes} minute${diffMinutes !== 1 ? 's' : ''} ago`;\n      }\n      return `${diffHours} hour${diffHours !== 1 ? 's' : ''} ago`;\n    } else if (diffDays === 1) {\n      return 'Yesterday';\n    } else if (diffDays < 7) {\n      return `${diffDays} days ago`;\n    } else if (diffDays < 30) {\n      const weeks = Math.floor(diffDays / 7);\n      return `${weeks} week${weeks !== 1 ? 's' : ''} ago`;\n    } else {\n      return formatDate(date);\n    }\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Recently Deleted</h1>\n          <p className=\"text-gray-600 mt-1\">\n            Tasks are kept for 30 days before permanent deletion\n          </p>\n        </div>\n        {deletedTasks.length > 0 && (\n          <Button\n            variant=\"danger\"\n            onClick={() => setShowClearAllModal(true)}\n            icon={<Trash2 size={16} />}\n          >\n            Clear All\n          </Button>\n        )}\n      </div>\n\n      {deletedTasks.length === 0 ? (\n        <Empty\n          title=\"No deleted tasks\"\n          description=\"Tasks you delete will appear here for 30 days\"\n          icon={\n            <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center\">\n              <Trash2 size={32} className=\"text-gray-400\" />\n            </div>\n          }\n        />\n      ) : (\n        <div className=\"space-y-4\">\n          {deletedTasks.map((deletedTask) => {\n            const project = deletedTask.task.projectId \n              ? projects.find(p => p.id === deletedTask.task.projectId)\n              : null;\n            \n            const taskCategories = categories.filter(c => \n              deletedTask.task.categoryIds?.includes(c.id)\n            );\n\n            return (\n              <Card \n                key={deletedTask.task.id}\n                className=\"hover:shadow-md transition-shadow cursor-pointer\"\n                onClick={() => {\n                  setSelectedTask(deletedTask);\n                  setShowDetailModal(true);\n                }}\n              >\n                <div className=\"p-4\">\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex-1\">\n                      <h3 className=\"font-medium text-gray-900\">\n                        {deletedTask.task.title}\n                      </h3>\n                      <div className=\"flex items-center gap-4 mt-2 text-sm text-gray-500\">\n                        <div className=\"flex items-center\">\n                          <Clock size={14} className=\"mr-1\" />\n                          Deleted {getDaysAgo(deletedTask.deletedAt)}\n                        </div>\n                        {deletedTask.task.dueDate && (\n                          <div className=\"flex items-center\">\n                            <Calendar size={14} className=\"mr-1\" />\n                            Was due {formatDate(new Date(deletedTask.task.dueDate))}\n                          </div>\n                        )}\n                        {project && (\n                          <div className=\"flex items-center\">\n                            <Folder size={14} className=\"mr-1\" style={{ color: project.color }} />\n                            <span style={{ color: project.color }}>{project.name}</span>\n                          </div>\n                        )}\n                      </div>\n                      {taskCategories.length > 0 && (\n                        <div className=\"flex items-center gap-1 mt-2\">\n                          <Tag size={14} className=\"text-gray-400\" />\n                          {taskCategories.map(category => (\n                            <span \n                              key={category.id}\n                              className=\"text-xs px-2 py-0.5 rounded-full\"\n                              style={{ \n                                backgroundColor: category.color + '20',\n                                color: category.color \n                              }}\n                            >\n                              {category.name}\n                            </span>\n                          ))}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"flex gap-2 ml-4\">\n                      <Button\n                        size=\"sm\"\n                        variant=\"secondary\"\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handleRestore(deletedTask.task.id);\n                        }}\n                        icon={<RotateCcw size={14} />}\n                      >\n                        Restore\n                      </Button>\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handlePermanentDelete(deletedTask.task.id);\n                        }}\n                        icon={<X size={14} />}\n                      >\n                        Delete\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            );\n          })}\n        </div>\n      )}\n\n      {/* Task Detail Modal */}\n      <Modal\n        isOpen={showDetailModal}\n        onClose={() => {\n          setShowDetailModal(false);\n          setSelectedTask(null);\n        }}\n        title=\"Deleted Task Details\"\n      >\n        {selectedTask && (\n          <div className=\"space-y-4\">\n            <div>\n              <h3 className=\"font-medium text-gray-900\">{selectedTask.task.title}</h3>\n              {selectedTask.task.description && (\n                <p className=\"mt-2 text-gray-600\">{selectedTask.task.description}</p>\n              )}\n            </div>\n            \n            <div className=\"space-y-2 text-sm\">\n              <div className=\"flex items-center text-gray-500\">\n                <Clock size={16} className=\"mr-2\" />\n                Deleted {getDaysAgo(selectedTask.deletedAt)}\n              </div>\n              {selectedTask.task.dueDate && (\n                <div className=\"flex items-center text-gray-500\">\n                  <Calendar size={16} className=\"mr-2\" />\n                  Due date was {formatDate(new Date(selectedTask.task.dueDate))}\n                </div>\n              )}\n            </div>\n\n            <div className=\"flex gap-3 pt-4 border-t\">\n              <Button\n                variant=\"primary\"\n                onClick={() => {\n                  handleRestore(selectedTask.task.id);\n                  setShowDetailModal(false);\n                  setSelectedTask(null);\n                }}\n                icon={<RotateCcw size={16} />}\n              >\n                Restore Task\n              </Button>\n              <Button\n                variant=\"danger\"\n                onClick={() => {\n                  handlePermanentDelete(selectedTask.task.id);\n                  setShowDetailModal(false);\n                  setSelectedTask(null);\n                }}\n                icon={<Trash2 size={16} />}\n              >\n                Delete Permanently\n              </Button>\n            </div>\n          </div>\n        )}\n      </Modal>\n\n      {/* Clear All Confirmation Modal */}\n      <Modal\n        isOpen={showClearAllModal}\n        onClose={() => setShowClearAllModal(false)}\n        title=\"Clear All Deleted Tasks\"\n        size=\"sm\"\n      >\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center text-red-600\">\n            <AlertTriangle size={20} className=\"mr-2\" />\n            <p className=\"font-medium\">This action cannot be undone!</p>\n          </div>\n          <p className=\"text-gray-600\">\n            Are you sure you want to permanently delete all {deletedTasks.length} tasks? \n            They will be removed forever and cannot be recovered.\n          </p>\n          <div className=\"flex justify-end space-x-3 pt-4\">\n            <Button\n              variant=\"secondary\"\n              onClick={() => setShowClearAllModal(false)}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"danger\"\n              onClick={handleClearAll}\n              icon={<Trash2 size={16} />}\n            >\n              Clear All\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default DeletedTasksPage;"],"names":["RotateCcw","createLucideIcon","DeletedTasksPage","projects","categories","tasks","setTasks","useAppContext","deletedTasks","setDeletedTasks","useState","showClearAllModal","setShowClearAllModal","selectedTask","setSelectedTask","showDetailModal","setShowDetailModal","useEffect","loadDeletedTasks","sorted","getDeletedTasks","a","b","handleRestore","taskId","restoredTask","restoreDeletedTask","updatedTasks","handlePermanentDelete","permanentlyDeleteTask","handleClearAll","clearAllDeletedTasks","getDaysAgo","dateString","date","diffTime","diffDays","diffHours","diffMinutes","weeks","formatDate","jsxs","jsx","Button","Trash2","Empty","deletedTask","project","p","taskCategories","_a","c","Card","Clock","Calendar","Folder","Tag","category","e","X","Modal","AlertTriangle"],"mappings":"+KAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,EAAYC,EAAiB,YAAa,CAC9C,CAAC,OAAQ,CAAE,EAAG,oDAAqD,IAAK,QAAQ,CAAE,EAClF,CAAC,OAAQ,CAAE,EAAG,WAAY,IAAK,QAAQ,CAAE,CAC3C,CAAC,ECOKC,EAA6B,IAAM,CACvC,KAAM,CAAE,SAAAC,EAAU,WAAAC,EAAY,MAAAC,EAAO,SAAAC,CAAA,EAAaC,IAC5C,CAACC,EAAcC,CAAe,EAAIC,EAAA,SAAwB,CAAE,CAAA,EAC5D,CAACC,EAAmBC,CAAoB,EAAIF,WAAS,EAAK,EAC1D,CAACG,EAAcC,CAAe,EAAIJ,WAA6B,IAAI,EACnE,CAACK,EAAiBC,CAAkB,EAAIN,WAAS,EAAK,EAG5DO,EAAAA,UAAU,IAAM,CACGC,GACnB,EAAG,CAAE,CAAA,EAEL,MAAMA,EAAmB,IAAM,CAG7B,MAAMC,EAFUC,IAEO,KAAK,CAACC,EAAGC,IAC9B,IAAI,KAAKA,EAAE,SAAS,EAAE,QAAA,EAAY,IAAI,KAAKD,EAAE,SAAS,EAAE,QAAQ,CAAA,EAElEZ,EAAgBU,CAAM,CAAA,EAGlBI,EAAiBC,GAAmB,CAClC,MAAAC,EAAeC,EAAmBF,CAAM,EAC9C,GAAIC,EAAc,CAEhB,MAAME,EAAe,CAAC,GAAGtB,EAAOoB,CAAY,EAC5CnB,EAASqB,CAAY,EAEJT,GACnB,CAAA,EAGIU,EAAyBJ,GAAmB,CAChDK,EAAsBL,CAAM,EACXN,GAAA,EAGbY,EAAiB,IAAM,CACNC,IACrBtB,EAAgB,CAAE,CAAA,EAClBG,EAAqB,EAAK,CAAA,EAGtBoB,EAAcC,GAA+B,CAC3C,MAAAC,EAAO,IAAI,KAAKD,CAAU,EAE1BE,EAAW,KAAK,QADN,OACc,UAAYD,EAAK,SAAS,EAClDE,EAAW,KAAK,MAAMD,GAAY,IAAO,GAAK,GAAK,GAAG,EAE5D,GAAIC,IAAa,EAAG,CAClB,MAAMC,EAAY,KAAK,MAAMF,EAAY,IAAe,EACxD,GAAIE,IAAc,EAAG,CACnB,MAAMC,EAAc,KAAK,MAAMH,EAAY,GAAU,EACrD,MAAO,GAAGG,CAAW,UAAUA,IAAgB,EAAI,IAAM,EAAE,MAC7D,CACA,MAAO,GAAGD,CAAS,QAAQA,IAAc,EAAI,IAAM,EAAE,MAAA,KACvD,IAAWD,IAAa,EACf,MAAA,YACT,GAAWA,EAAW,EACpB,MAAO,GAAGA,CAAQ,YACpB,GAAWA,EAAW,GAAI,CACxB,MAAMG,EAAQ,KAAK,MAAMH,EAAW,CAAC,EACrC,MAAO,GAAGG,CAAK,QAAQA,IAAU,EAAI,IAAM,EAAE,MAAA,KAE7C,QAAOC,EAAWN,CAAI,EACxB,EAIA,OAAAO,EAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAgB,mBAAA,EAChEA,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAElC,uDAAA,CAAA,EACF,EACClC,EAAa,OAAS,GACrBkC,EAAA,IAACC,EAAA,CACC,QAAQ,SACR,QAAS,IAAM/B,EAAqB,EAAI,EACxC,KAAM8B,EAAAA,IAACE,EAAO,CAAA,KAAM,EAAI,CAAA,EACzB,SAAA,WAAA,CAED,CAAA,EAEJ,EAECpC,EAAa,SAAW,EACvBkC,EAAA,IAACG,EAAA,CACC,MAAM,mBACN,YAAY,gDACZ,KACGH,EAAA,IAAA,MAAA,CAAI,UAAU,sEACb,SAACA,EAAAA,IAAAE,EAAA,CAAO,KAAM,GAAI,UAAU,eAAA,CAAgB,CAC9C,CAAA,CAAA,CAAA,QAIH,MAAI,CAAA,UAAU,YACZ,SAAapC,EAAA,IAAKsC,GAAgB,CACjC,MAAMC,EAAUD,EAAY,KAAK,UAC7B3C,EAAS,KAAU6C,GAAAA,EAAE,KAAOF,EAAY,KAAK,SAAS,EACtD,KAEEG,EAAiB7C,EAAW,UAChC,OAAA,OAAA8C,EAAAJ,EAAY,KAAK,cAAjB,YAAAI,EAA8B,SAASC,EAAE,IAAE,EAI3C,OAAAT,EAAA,IAACU,EAAA,CAEC,UAAU,mDACV,QAAS,IAAM,CACbtC,EAAgBgC,CAAW,EAC3B9B,EAAmB,EAAI,CACzB,EAEA,eAAC,MAAI,CAAA,UAAU,MACb,SAACyB,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,SACb,SAAA,CAAAC,MAAC,KAAG,CAAA,UAAU,4BACX,SAAAI,EAAY,KAAK,MACpB,EACAL,EAAAA,KAAC,MAAI,CAAA,UAAU,qDACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAA,IAACW,EAAM,CAAA,KAAM,GAAI,UAAU,OAAO,EAAE,WAC3BrB,EAAWc,EAAY,SAAS,CAAA,EAC3C,EACCA,EAAY,KAAK,SACfL,EAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAA,IAACY,EAAS,CAAA,KAAM,GAAI,UAAU,OAAO,EAAE,WAC9Bd,EAAW,IAAI,KAAKM,EAAY,KAAK,OAAO,CAAC,CAAA,EACxD,EAEDC,GACCN,EAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACC,EAAAA,IAAAa,EAAA,CAAO,KAAM,GAAI,UAAU,OAAO,MAAO,CAAE,MAAOR,EAAQ,KAAS,CAAA,CAAA,EACpEL,EAAAA,IAAC,QAAK,MAAO,CAAE,MAAOK,EAAQ,OAAU,SAAAA,EAAQ,IAAK,CAAA,CAAA,EACvD,CAAA,EAEJ,EACCE,EAAe,OAAS,GACtBR,EAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAC,EAAA,IAACc,EAAI,CAAA,KAAM,GAAI,UAAU,gBAAgB,EACxCP,EAAe,IACdQ,GAAAf,EAAA,IAAC,OAAA,CAEC,UAAU,mCACV,MAAO,CACL,gBAAiBe,EAAS,MAAQ,KAClC,MAAOA,EAAS,KAClB,EAEC,SAASA,EAAA,IAAA,EAPLA,EAAS,EAAA,CASjB,CAAA,EACH,CAAA,EAEJ,EACAhB,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAC,EAAA,IAACC,EAAA,CACC,KAAK,KACL,QAAQ,YACR,QAAUe,GAAM,CACdA,EAAE,gBAAgB,EACJnC,EAAAuB,EAAY,KAAK,EAAE,CACnC,EACA,KAAMJ,EAAAA,IAAC1C,EAAU,CAAA,KAAM,EAAI,CAAA,EAC5B,SAAA,SAAA,CAED,EACA0C,EAAA,IAACC,EAAA,CACC,KAAK,KACL,QAAQ,UACR,QAAUe,GAAM,CACdA,EAAE,gBAAgB,EACI9B,EAAAkB,EAAY,KAAK,EAAE,CAC3C,EACA,KAAMJ,EAAAA,IAACiB,EAAE,CAAA,KAAM,EAAI,CAAA,EACpB,SAAA,QAAA,CAED,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EA1EKb,EAAY,KAAK,EAAA,CA6E3B,CAAA,EACH,EAIFJ,EAAA,IAACkB,EAAA,CACC,OAAQ7C,EACR,QAAS,IAAM,CACbC,EAAmB,EAAK,EACxBF,EAAgB,IAAI,CACtB,EACA,MAAM,uBAEL,SACCD,GAAA4B,OAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAC,MAAC,KAAG,CAAA,UAAU,4BAA6B,SAAA7B,EAAa,KAAK,MAAM,EAClEA,EAAa,KAAK,aACjB6B,EAAAA,IAAC,KAAE,UAAU,qBAAsB,SAAa7B,EAAA,KAAK,WAAY,CAAA,CAAA,EAErE,EAEA4B,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kCACb,SAAA,CAAAC,EAAA,IAACW,EAAM,CAAA,KAAM,GAAI,UAAU,OAAO,EAAE,WAC3BrB,EAAWnB,EAAa,SAAS,CAAA,EAC5C,EACCA,EAAa,KAAK,SAChB4B,EAAA,KAAA,MAAA,CAAI,UAAU,kCACb,SAAA,CAAAC,EAAA,IAACY,EAAS,CAAA,KAAM,GAAI,UAAU,OAAO,EAAE,gBACzBd,EAAW,IAAI,KAAK3B,EAAa,KAAK,OAAO,CAAC,CAAA,EAC9D,CAAA,EAEJ,EAEA4B,EAAAA,KAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAAAC,EAAA,IAACC,EAAA,CACC,QAAQ,UACR,QAAS,IAAM,CACCpB,EAAAV,EAAa,KAAK,EAAE,EAClCG,EAAmB,EAAK,EACxBF,EAAgB,IAAI,CACtB,EACA,KAAM4B,EAAAA,IAAC1C,EAAU,CAAA,KAAM,EAAI,CAAA,EAC5B,SAAA,cAAA,CAED,EACA0C,EAAA,IAACC,EAAA,CACC,QAAQ,SACR,QAAS,IAAM,CACSf,EAAAf,EAAa,KAAK,EAAE,EAC1CG,EAAmB,EAAK,EACxBF,EAAgB,IAAI,CACtB,EACA,KAAM4B,EAAAA,IAACE,EAAO,CAAA,KAAM,EAAI,CAAA,EACzB,SAAA,oBAAA,CAED,CAAA,EACF,CAAA,EACF,CAAA,CAEJ,EAGAF,EAAA,IAACkB,EAAA,CACC,OAAQjD,EACR,QAAS,IAAMC,EAAqB,EAAK,EACzC,MAAM,0BACN,KAAK,KAEL,SAAA6B,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iCACb,SAAA,CAAAC,EAAA,IAACmB,EAAc,CAAA,KAAM,GAAI,UAAU,OAAO,EACzCnB,EAAA,IAAA,IAAA,CAAE,UAAU,cAAc,SAA6B,gCAAA,CAAA,EAC1D,EACAD,EAAAA,KAAC,IAAE,CAAA,UAAU,gBAAgB,SAAA,CAAA,mDACsBjC,EAAa,OAAO,+DAAA,EAEvE,EACAiC,EAAAA,KAAC,MAAI,CAAA,UAAU,kCACb,SAAA,CAAAC,EAAA,IAACC,EAAA,CACC,QAAQ,YACR,QAAS,IAAM/B,EAAqB,EAAK,EAC1C,SAAA,QAAA,CAED,EACA8B,EAAA,IAACC,EAAA,CACC,QAAQ,SACR,QAASb,EACT,KAAMY,EAAAA,IAACE,EAAO,CAAA,KAAM,EAAI,CAAA,EACzB,SAAA,WAAA,CAED,CAAA,EACF,CAAA,EACF,CAAA,CACF,CACF,CAAA,CAAA,CAEJ","x_google_ignoreList":[0]}